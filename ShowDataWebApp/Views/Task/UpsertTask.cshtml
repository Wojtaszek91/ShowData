@model ShowDataWebApp.Models.ViewModels.UpsertTaskVM
@{
    var title = "Create Task";
}


<form method="post" asp-action="Upserttask" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row px-2 mx-2 backgroundWhite border">
        @if (Model.task.Id != 0)
        {
            <input type="hidden" asp-for="task.Id" />
            <input type="hidden" asp-for="task.isAvailsable" />
            title = "Edit task";
        }
        </div>
        <div class="col-12 p-3">
            <h2 class="text-primary">@title</h2>
        </div>
        <div class="col-8">
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="task.DisplayName"></label>
                </div>
                <div class="col-8">
                    <input asp-for="task.DisplayName" class="form-control" />
                    <span asp-validation-for="task.DisplayName" class="text-danger"></span>
                </div>
            </div>
            </div>
        <div class="col-8">
            <div class="form-group row">
                <div class="col-4">
                    Project
                </div>
                <div class="col-8">
                    @Html.DropDownListFor(d => d.task.ProjectId, Model.ProjectsList,
                    "Please select Project", new { @class = "form-control" })
                    <span asp-validation-for="task.ProjectId" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    User
                </div>
                <div class="col-8">
                    @Html.DropDownListFor(d => d.task.UserForTask, Model.UsersList,
                    "Please select User", new { @class = "form-control" })
                    <span asp-validation-for="task.UserForTask" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="task.TaskDescription"></label>
                </div>
                <div class="col-8">
                    <input asp-for="task.TaskDescription" class="form-control" />
                    <span asp-validation-for="task.TaskDescription" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="task.Image"></label>
                </div>
                <div class="col-8">
                    <input type="file" asp-for="task.Image" id="dataImage" name="files" multiple class="form-control" />
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="task.DisplayDate"></label>
                </div>
                <div class="col-8">
                    @{
                        var someDateSM = new DateTime();
                        if (Model.task.Id != 0)
                        {
                            someDateSM = Model.task.DisplayDate;
                        }
                    }
                    @Html.EditorFor(model => model.task.DisplayDate, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4 offset-4">
                    <button type="submit" class="btn-primary form-control">
                        @(Model.task.Id!=0?"Update":"Create")
                    </button>
                </div>
                <div class="col-4">
                    <a asp-action="TasksView" asp-route-id="@Model.task.ProjectId" class="btn btn-success form-control">Back to project</a>
                </div>
            </div>
        </div>
        <div class="col-4 text-right" style="width:250px;">
            @if (Model.task.Image != null)
            {
                var base64 = Convert.ToBase64String(Model.task.Image);
                var imgSrc = string.Format("data:image/jpg;base64,{0}", base64);
                <img src="@imgSrc" width="200" />
            }
        </div>


</form>

